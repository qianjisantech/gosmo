package fastcgi

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestEncode(t *testing.T) {
	should := require.New(t)
	type args struct {
		reqId uint16
		http  *Http
	}
	tests := []struct {
		name    string
		args    args
		want    []byte
		wantErr bool
	}{
		{
			"t1",
			args{
				1,
				&Http{
					IsRequest: true,
					Header: map[string]string{
						"REQUEST_METHOD":  "POST",
						"REQUEST_URI":     "/",
						"SCRIPT_FILENAME": "/tmp/fastcgi.php",
					},
					BodyIn: nil,
				},
			},
			[]byte{0x1, 0x1, 0x0, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x0, 0x1, 0x0, 0x43, 0x5, 0x0, 0xe, 0x4, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x50, 0x4f, 0x53, 0x54, 0xb, 0x1, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x52, 0x49, 0x2f, 0xf, 0x10, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x2f, 0x74, 0x6d, 0x70, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x63, 0x67, 0x69, 0x2e, 0x70, 0x68, 0x70, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x5, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0},
			false,
		},
	}
	for _, tt := range tests {
		got, err := Encode(tt.args.reqId, tt.args.http)

		should.Equal(tt.wantErr, err != nil,
			fmt.Sprintf("%q. Encode() wantErr %v, error = %v", tt.name, tt.wantErr, err))

		should.Equal(tt.want, got,
			fmt.Sprintf("%q. Encode() want %v, = %v", tt.name, string(tt.want), string(got)))
	}
}
